// When color definition differs for dark and light variant,
// it gets @if ed depending on $variant

@import 'tweaks-temp';
@import 'color-palette';

// imports $palette
@import 'catppuccin';

$flavor: "mocha";
$accent: "lavender";

$flavor_colors: map-get($palette, $flavor);

@function gtkalpha($c, $a) {
  @return unquote("alpha(#{$c}, #{$a})");
}

@function on($color, $state: 'primary') {
  // Allow 'light' or 'dark' to $color
  @if ($color == 'light') { $color: white; }
  @if ($color == 'dark') { $color: black; }

  // Calculate color brightness according to https://www.w3.org/TR/AERT/#color-contrast
  $brightness: (red($color) * 299 + green($color) * 587 + blue($color) * 114) / 1000;

  @if ($brightness >= 156) {
    @if ($state == 'primary') { @return rgba(black, 0.87); }
    @if ($state == 'secondary') { @return rgba(black, 0.6); }
    @if ($state == 'disabled') { @return rgba(black, 0.38); }
    @if ($state == 'secondary-disabled') { @return rgba(black, 0.26); }
    @if ($state == 'track') { @return rgba(black, 0.26); }
    @if ($state == 'track-disabled') { @return rgba(black, 0.12); }
    @if ($state == 'divider') { @return rgba(black, 0.12); }
    @if ($state == 'secondary-fill') { @return rgba(black, 0.08); }
    @if ($state == 'fill') { @return rgba(black, 0.04); }
  } @else {
    @if ($state == 'primary') { @return white; }
    @if ($state == 'secondary') { @return rgba(white, 0.7); }
    @if ($state == 'disabled') { @return rgba(white, 0.5); }
    @if ($state == 'secondary-disabled') { @return rgba(white, 0.3); }
    @if ($state == 'track') { @return rgba(white, 0.3); }
    @if ($state == 'track-disabled') { @return rgba(white, 0.12); }
    @if ($state == 'divider') { @return rgba(white, 0.12); }
    @if ($state == 'secondary-fill') { @return rgba(white, 0.08); }
    @if ($state == 'fill') { @return rgba(white, 0.04); }
  }
}

@function highlight($color) {
  @if (lightness($color) >= 80%) { @return rgba(white, 0); }
  @else if (lightness($color) >= 40%) { @return rgba(white, 0.2); }
  @else { @return rgba(white, 0.1); }
}

@function theme($color) {
  @return map-get($flavor_colors, $accent);
}

@function background($type) {
  @if ($type == 'a') { @return map-get($flavor_colors, "text"); }
  @if ($type == 'b') { @return map-get($flavor_colors, "subtext1"); }
  @if ($type == 'c') { @return map-get($flavor_colors, "subtext0"); }
  @if ($type == 'd') { @return map-get($flavor_colors, "overlay2"); }

  @if ($type == 'e') { @return map-get($flavor_colors, "crust"); }
  @if ($type == 'f') { @return map-get($flavor_colors, "mantle"); }
  @if ($type == 'g') { @return map-get($flavor_colors, "base"); }
  @if ($type == 'h') { @return map-get($flavor_colors, "surface0"); }
}

@function overlay($color, $state: 'normal') {
  @if ($state == 'normal') { @return rgba(on($color), 0.06); }
  @if ($state == 'hover') { @return rgba(on($color), 0.12); }
  @if ($state == 'focus') { @return rgba(on($color), 0.08); }
  @if ($state == 'active') { @return rgba(on($color), 0.20); }
  @if ($state == 'checked') { @return rgba(on($color), 0.15); }
  @if ($state == 'selected') { @return rgba(on($color), 0.1); }
}

//
// Basic colors
//

$primary:                               theme(color);
$drop_target_color:                     map-get($flavor_colors, "peach");
$indicator:                             theme(color);
$titlebar-indicator:                    if($variant == 'dark', currentColor, $primary);
$inverse-indicator:                     if($theme == 'default', white, $primary);
$applet-primary:                        if($topbar == 'dark' and $theme == 'default' and $variant == 'light', #DDDDDD, $primary);
$titlebar-primary:                      if($topbar == 'dark' and $theme == 'default' and $variant == 'light', if($color_type == 'nord', #dbdee5, #e0e0e0), $primary);
$osd-primary:                           if($theme == 'default', if($color_type == 'nord', #dbdee5, #e0e0e0), $primary);

$background:                            if($variant == 'light', background(a), background(g));
$surface:                               if($variant == 'light', background(a), background(h));
$base:                                  if($variant == 'light', background(a), background(g));
$base-alt:                              if($variant == 'light', background(b), background(f));
$sidebg:                                if($variant == 'light', background(b), background(f));

@if $sidebar == 'contrast' {
  $sidebg:                              if($variant == 'light', background(h), background(d));
}

@if $sidebar == 'styled' {
  $sidebg:                              $primary;
}

$login-background:                      if($variant == 'light', background(d), background(g)); // For gnome-shell

$tooltip:                               if($variant == 'dark', rgba(darken(background(e), 3%), 0.9), rgba(darken(background(h), 3%), 0.9));
$system:                                darken(background(e), 3%);
$osd:                                   background(e);
$scrim:                                 background(f);
$scrim-alt:                             background(g);
$scrim-inverse:                         rgba(white, 0.1);
$titlebar:                              if($topbar == 'dark', background(g), background(a));
$titlebar-backdrop:                     if($topbar == 'dark', background(g), background(a));
$popover:                               $base;
$panel-solid:                           if($topbar == 'dark', background(e), background(c)); // for Unity panel which doesn't allow translucent colors
$panel:                                 rgba($panel-solid, $panel_opacity);

$button:                                on($background, fill);
$entry:                                 on($background, fill);

//
// Misc colors
//

$link:                                  map-get($flavor_colors, "blue");
$link-visited:                          map-get($flavor_colors, "mauve");

$warning:                               map-get($flavor_colors, "yellow");
$error:                                 map-get($flavor_colors, "red");
$success:                               map-get($flavor_colors, "green");

$suggested:                             $primary;
$destructive:                           $error;

$frame:                                 if($variant == 'light', rgba(black, 0.12), rgba(black, 0.25));
$side-frame:                            if($variant == 'light', rgba(black, 0.25), rgba(black, 0.12));
$border:                                if($variant == 'light', rgba(black, 0.12), rgba(white, 0.12));
$side-border:                           if($variant == 'light', rgba(black, 0.1), rgba(white, 0.1));
$solid-border:                          if($variant == 'light', darken($background, 12%), lighten($background, 12%));
$border-alt:                            rgba(black, 0.16); // darker border color for Chrome and Firefox

//
// Overlay state colors
//

$overlay-normal:                        gtkalpha(currentColor, 0.05);
$overlay-hover:                         gtkalpha(currentColor, 0.08);
$overlay-focus:                         gtkalpha(currentColor, 0.08);
$overlay-focus-hover:                   gtkalpha(currentColor, 0.16);
$overlay-active:                        gtkalpha(currentColor, 0.12);
$overlay-checked:                       gtkalpha(currentColor, 0.10);
$overlay-selected:                      gtkalpha(currentColor, 0.06);

//
// Text and derivative colors
//

$text:                                  on($background);
$text-secondary:                        on($background, secondary);
$text-disabled:                         on($background, disabled);
$text-secondary-disabled:               on($background, secondary-disabled);
$track:                                 on($background, track);
$track-disabled:                        on($background, track-disabled);
$divider:                               on($background, divider);
$secondary-fill:                        on($background, secondary-fill);
$fill:                                  on($background, fill);

$titlebar-text:                         on($titlebar);
$titlebar-text-secondary:               on($titlebar, secondary);
$titlebar-text-disabled:                on($titlebar, disabled);
$titlebar-text-secondary-disabled:      on($titlebar, secondary-disabled);
$titlebar-track:                        on($titlebar, track);
$titlebar-track-disabled:               on($titlebar, track-disabled);
$titlebar-divider:                      on($titlebar, divider);
$titlebar-fill:                         on($titlebar, fill);

$panel-text:                            on($panel);
$panel-text-secondary:                  on($panel, secondary);
$panel-text-disabled:                   on($panel, disabled);
$panel-text-secondary-disabled:         on($panel, secondary-disabled);
$panel-track:                           on($panel, track);
$panel-track-disabled:                  on($panel, track-disabled);
$panel-divider:                         on($panel, divider);
$panel-fill:                            on($panel, fill);

// workaround for GTK3 @placeholder_text_color which doesn't allow translucent colors
$placeholder_text_color:                if($variant == 'light', mix(black, $base, percentage(0.6)), mix(white, $base, percentage(0.7)));
